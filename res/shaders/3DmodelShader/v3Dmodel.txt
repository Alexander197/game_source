#version 460
layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec2 texture_coords;
layout(location = 2) in vec3 normal;
layout(location = 3) in vec3 tangent;

out vec2 texCoords;

out vec3 Normal;
out vec3 FragPos;

out mat3 TBN;

uniform mat4 projectionMat;
uniform mat4 viewMat;
uniform mat4 modelMat;

uniform mat3 nModelMat;

void main() {
   texCoords = texture_coords;
   
   Normal = nModelMat * normal;
   FragPos = vec3(modelMat * vec4(vertex_position, 1.0));
   
   vec3 T = normalize(vec3(modelMat * vec4(tangent, 0.0)));
   vec3 N = normalize(vec3(modelMat * vec4(normal, 0.0)));
   vec3 B = cross(N, T);
   
   TBN = mat3(T, B, N);
   
   gl_Position = projectionMat * viewMat * modelMat * vec4(vertex_position, 1.0);
}